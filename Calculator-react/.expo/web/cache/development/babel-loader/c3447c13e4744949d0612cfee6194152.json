{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\karen\\\\Calculator\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport InputButton from \"./src/InputButton\";\nimport Style from \"./src/Style\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nvar inputButtons = [['CE', 'C'], [1, 2, 3, '/'], [4, 5, 6, '*'], [7, 8, 9, '-'], [0, '.', '=', '+']];\n\nvar ReactCalculator = function (_Component) {\n  _inherits(ReactCalculator, _Component);\n\n  var _super = _createSuper(ReactCalculator);\n\n  function ReactCalculator(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalculator);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      previousInputValue: 0,\n      inputValue: 0,\n      selectedSymbol: null,\n      point: 0\n    };\n    return _this;\n  }\n\n  _createClass(ReactCalculator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: Style.rootContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, React.createElement(View, {\n        style: Style.displayContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: Style.displayText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, \" \", this.state.inputValue, \" \"), \" \"), \" \", React.createElement(View, {\n        style: Style.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      }, \" \", this._renderInputButtons(), \" \"), \" \");\n    }\n  }, {\n    key: \"_renderInputButtons\",\n    value: function _renderInputButtons() {\n      var views = [];\n\n      for (var r = 0; r < inputButtons.length; r++) {\n        var row = inputButtons[r];\n        var inputRow = [];\n\n        for (var i = 0; i < row.length; i++) {\n          var input = row[i];\n          inputRow.push(React.createElement(InputButton, {\n            value: input,\n            onPress: this._onInputButtonPressed.bind(this, input),\n            key: r + \"-\" + i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 24\n            }\n          }));\n        }\n\n        views.push(React.createElement(View, {\n          style: Style.inputRow,\n          key: \"row-\" + r,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }\n        }, \" \", inputRow, \" \"));\n      }\n\n      return views;\n    }\n  }, {\n    key: \"_handlePointInput\",\n    value: function _handlePointInput() {\n      this.state.virgule = true;\n    }\n  }, {\n    key: \"_onInputButtonPressed\",\n    value: function _onInputButtonPressed(input) {\n      switch (typeof input) {\n        case 'number':\n          return this._handleNumberInput(input);\n\n        case 'string':\n          if (input != \".\") {\n            return this._handleStringInput(input);\n          } else {\n            return this._handlePointInput();\n          }\n\n      }\n    }\n  }, {\n    key: \"_handleNumberInput\",\n    value: function _handleNumberInput(num) {\n      if (typeof this.state.inputValue == 'string') {\n        this.state.inputValue = 0;\n        inputValue = this.state.inputValue * 10 + num;\n      } else if (this.state.virgule == true) {\n        var x = this.state.previousPoint + 1;\n        var dividande = Math.pow(10, x);\n        var inputValue = num / dividande + this.state.inputValue;\n        this.state.previousPoint += 1;\n      } else {\n        inputValue = this.state.inputValue * 10 + num;\n      }\n\n      this.setState({\n        inputValue: inputValue\n      });\n    }\n  }, {\n    key: \"_handleStringInput\",\n    value: function _handleStringInput(str) {\n      switch (str) {\n        case '/':\n        case '*':\n        case '+':\n        case '-':\n          this.setState({\n            selectedSymbol: str,\n            previousInputValue: this.state.inputValue,\n            inputValue: 0\n          });\n          break;\n\n        case 'CE':\n          inputValue = 0;\n          this.state.previousInputValue = 0;\n          this.setState({\n            inputValue: inputValue,\n            point: false\n          });\n          break;\n\n        case 'C':\n          inputValue = 0;\n          this.setState({\n            inputValue: inputValue,\n            point: false\n          });\n          break;\n\n        case '=':\n          var symbol = this.state.selectedSymbol,\n              inputValue = this.state.inputValue,\n              previousInputValue = this.state.previousInputValue;\n\n          if (!symbol) {\n            return;\n          }\n\n          this.setState({\n            previousInputValue: 0,\n            inputValue: eval(previousInputValue + symbol + inputValue),\n            selectedSymbol: null\n          });\n          break;\n      }\n    }\n  }]);\n\n  return ReactCalculator;\n}(Component);\n\nexport default ReactCalculator;","map":{"version":3,"sources":["C:/Users/karen/Calculator/App.js"],"names":["React","Component","InputButton","Style","inputButtons","ReactCalculator","props","state","previousInputValue","inputValue","selectedSymbol","point","rootContainer","displayContainer","displayText","inputContainer","_renderInputButtons","views","r","length","row","inputRow","i","input","push","_onInputButtonPressed","bind","virgule","_handleNumberInput","_handleStringInput","_handlePointInput","num","x","previousPoint","dividande","Math","pow","setState","str","symbol","eval"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport InputButton from './src/InputButton';\nimport Style from './src/Style';\nimport {\n  View,\n  Text,\n  AppRegistry\n} from 'react-native';\n\nconst inputButtons = [\n  ['CE', 'C'],\n  [1, 2, 3, '/'],\n  [4, 5, 6, '*'],\n  [7, 8, 9, '-'],\n  [0, '.', '=', '+']\n];\n\nclass ReactCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      previousInputValue: 0,\n      inputValue: 0,\n      selectedSymbol: null,\n      point: 0,\n    }\n  }\n\n  render() {\n    return ( <\n      View style = {\n        Style.rootContainer\n      } >\n      <\n      View style = {\n        Style.displayContainer\n      } >\n      <\n      Text style = {\n        Style.displayText\n      } > {\n        this.state.inputValue\n      } < /Text> <\n      /View> <\n      View style = {\n        Style.inputContainer\n      } > {\n        this._renderInputButtons()\n      } <\n      /View> <\n      /View>\n    )\n  }\n\n  _renderInputButtons() {\n    let views = [];\n\n    for (var r = 0; r < inputButtons.length; r++) {\n      let row = inputButtons[r];\n\n      let inputRow = [];\n      for (var i = 0; i < row.length; i++) {\n        let input = row[i];\n\n        inputRow.push( <\n          InputButton value = {\n            input\n          }\n          onPress = {\n            this._onInputButtonPressed.bind(this, input)\n          }\n          key = {\n            r + \"-\" + i\n          }\n          />\n        );\n      }\n\n      views.push( < View style = {\n          Style.inputRow\n        }\n        key = {\n          \"row-\" + r\n        } > {\n          inputRow\n        } < /View>)\n      }\n\n      return views;\n    }\n\n    _handlePointInput() {\n      this.state.virgule = true;\n    }\n\n    _onInputButtonPressed(input) {\n      switch (typeof input) {\n        case 'number':\n          return this._handleNumberInput(input)\n        case 'string':\n          if (input != \".\") {\n            return this._handleStringInput(input)\n          } else {\n            return this._handlePointInput()\n          }\n      }\n    }\n    _handleNumberInput(num) {\n      if (typeof this.state.inputValue == 'string') {\n        this.state.inputValue = 0;\n        inputValue = (this.state.inputValue * 10) + num;\n      } else if (this.state.virgule == true) {\n        let x = this.state.previousPoint + 1;\n        let dividande = Math.pow(10, x);\n        var inputValue = (num / dividande) + this.state.inputValue;\n        this.state.previousPoint += 1;\n      } else {\n        inputValue = (this.state.inputValue * 10) + num;\n      }\n      this.setState({\n        inputValue: inputValue\n      })\n    }\n\n    _handleStringInput(str) {\n      switch (str) {\n        case '/':\n        case '*':\n        case '+':\n        case '-':\n          this.setState({\n            selectedSymbol: str,\n            previousInputValue: this.state.inputValue,\n            inputValue: 0\n          });\n          break;\n        case 'CE':\n          inputValue = 0;\n          this.state.previousInputValue = 0;\n          this.setState({\n            inputValue: inputValue,\n            point: false,\n          })\n          break;\n        case 'C':\n          inputValue = 0;\n          this.setState({\n            inputValue: inputValue,\n            point: false,\n          })\n          break;\n        case '=':\n          let symbol = this.state.selectedSymbol,\n            inputValue = this.state.inputValue,\n            previousInputValue = this.state.previousInputValue;\n\n          if (!symbol) {\n            return;\n          }\n\n          this.setState({\n            previousInputValue: 0,\n            inputValue: eval(previousInputValue + symbol + inputValue),\n            selectedSymbol: null\n          });\n          break;\n      }\n    }\n  }\n\n  export default ReactCalculator"]},"metadata":{},"sourceType":"module"}