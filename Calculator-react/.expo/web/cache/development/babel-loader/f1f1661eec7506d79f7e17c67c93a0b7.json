{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\karen\\\\Calculator\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport InputButton from \"./src/InputButton\";\nimport Style from \"./src/Style\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nvar inputButtons = [[1, 2, 3, '/'], [4, 5, 6, '*'], [7, 8, 9, '-'], [0, '.', '=', '+']];\n\nvar ReactCalculator = function (_Component) {\n  _inherits(ReactCalculator, _Component);\n\n  var _super = _createSuper(ReactCalculator);\n\n  function ReactCalculator(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalculator);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      previousInputValue: 0,\n      inputValue: 0,\n      selectedSymbol: null\n    };\n    return _this;\n  }\n\n  _createClass(ReactCalculator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: Style.rootContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }\n      }, React.createElement(View, {\n        style: Style.displayContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: Style.displayText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, \" \", this.state.inputValue, \" \"), \" \"), \" \", React.createElement(View, {\n        style: Style.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }\n      }, \" \", this._renderInputButtons(), \" \"), \" \");\n    }\n  }, {\n    key: \"_renderInputButtons\",\n    value: function _renderInputButtons() {\n      var views = [];\n\n      for (var r = 0; r < inputButtons.length; r++) {\n        var row = inputButtons[r];\n        var inputRow = [];\n\n        for (var i = 0; i < row.length; i++) {\n          var input = row[i];\n          inputRow.push(React.createElement(InputButton, {\n            value: input,\n            onPress: this._onInputButtonPressed.bind(this, input),\n            key: r + \"-\" + i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 24\n            }\n          }));\n        }\n\n        views.push(React.createElement(View, {\n          style: Style.inputRow,\n          key: \"row-\" + r,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }\n        }, \" \", inputRow, \" \"));\n      }\n\n      return views;\n    }\n  }, {\n    key: \"_onInputButtonPressed\",\n    value: function _onInputButtonPressed(input) {\n      switch (typeof input) {\n        case 'number':\n          return this._handleNumberInput(input);\n\n        case 'string':\n          return this._handleStringInput(input);\n      }\n    }\n  }, {\n    key: \"_handleNumberInput\",\n    value: function _handleNumberInput(num) {\n      var inputValue = this.state.inputValue * 10 + num;\n      this.setState({\n        inputValue: inputValue\n      });\n    }\n  }, {\n    key: \"_handleStringInput\",\n    value: function _handleStringInput(str) {\n      switch (str) {\n        case '/':\n        case '*':\n        case '+':\n        case '-':\n          this.setState({\n            selectedSymbol: str,\n            previousInputValue: this.state.inputValue,\n            inputValue: 0\n          });\n          break;\n\n        case '=':\n          var symbol = this.state.selectedSymbol,\n              inputValue = this.state.inputValue,\n              previousInputValue = this.state.previousInputValue;\n\n          if (!symbol) {\n            return;\n          }\n\n          this.setState({\n            previousInputValue: 0,\n            inputValue: eval(previousInputValue + symbol + inputValue),\n            selectedSymbol: null\n          });\n          break;\n      }\n    }\n  }]);\n\n  return ReactCalculator;\n}(Component);\n\nexport default ReactCalculator;","map":{"version":3,"sources":["C:/Users/karen/Calculator/App.js"],"names":["React","Component","InputButton","Style","inputButtons","ReactCalculator","props","state","previousInputValue","inputValue","selectedSymbol","rootContainer","displayContainer","displayText","inputContainer","_renderInputButtons","views","r","length","row","inputRow","i","input","push","_onInputButtonPressed","bind","_handleNumberInput","_handleStringInput","num","setState","str","symbol","eval"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;AAGA,OAAOC,WAAP;AACA,OAAOC,KAAP;;;;AAOA,IAAMC,YAAY,GAAG,CACnB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CADmB,EAEnB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAFmB,EAGnB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAHmB,EAInB,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,CAJmB,CAArB;;IAOMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE,CADT;AAEXC,MAAAA,UAAU,EAAE,CAFD;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAHiB;AAQlB;;;;WAED,kBAAS;AACP,aAAS,oBACP,IADO;AACF,QAAA,KAAK,EACRP,KAAK,CAACQ,aAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIP,oBACA,IADA;AACK,QAAA,KAAK,EACRR,KAAK,CAACS,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIA,oBACA,IADA;AACK,QAAA,KAAK,EACRT,KAAK,CAACU,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIE,KAAKN,KAAL,CAAWE,UAJb,MAJA,MAJO,OAcA,oBACP,IADO;AACF,QAAA,KAAK,EACRN,KAAK,CAACW,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIL,KAAKC,mBAAL,EAJK,MAdA,MAAT;AAuBD;;;WACD,+BAAsB;AACpB,UAAIC,KAAK,GAAG,EAAZ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,YAAY,CAACc,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAIE,GAAG,GAAGf,YAAY,CAACa,CAAD,CAAtB;AAEA,YAAIG,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACD,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;AACnC,cAAIC,KAAK,GAAGH,GAAG,CAACE,CAAD,CAAf;AAEAD,UAAAA,QAAQ,CAACG,IAAT,CAAe,oBACb,WADa;AACD,YAAA,KAAK,EACfD,KAFW;AAIb,YAAA,OAAO,EACL,KAAKE,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCH,KAAtC,CALW;AAOb,YAAA,GAAG,EACDL,CAAC,GAAG,GAAJ,GAAUI,CARC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;AAYD;;AAEDL,QAAAA,KAAK,CAACO,IAAN,CAAY,oBAAE,IAAF;AAAO,UAAA,KAAK,EACpBpB,KAAK,CAACiB,QADE;AAGV,UAAA,GAAG,EACD,SAASH,CAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMRG,QANQ,MAAZ;AAQC;;AAED,aAAOJ,KAAP;AACD;;;WACD,+BAAsBM,KAAtB,EAA6B;AAC3B,cAAQ,OAAOA,KAAf;AACE,aAAK,QAAL;AACE,iBAAO,KAAKI,kBAAL,CAAwBJ,KAAxB,CAAP;;AACF,aAAK,QAAL;AACE,iBAAO,KAAKK,kBAAL,CAAwBL,KAAxB,CAAP;AAJJ;AAMD;;;WACD,4BAAmBM,GAAnB,EAAwB;AACtB,UAAInB,UAAU,GAAI,KAAKF,KAAL,CAAWE,UAAX,GAAwB,EAAzB,GAA+BmB,GAAhD;AAEA,WAAKC,QAAL,CAAc;AACZpB,QAAAA,UAAU,EAAEA;AADA,OAAd;AAGD;;;WAED,4BAAmBqB,GAAnB,EAAwB;AACtB,cAAQA,GAAR;AACE,aAAK,GAAL;AACA,aAAK,GAAL;AACA,aAAK,GAAL;AACA,aAAK,GAAL;AACE,eAAKD,QAAL,CAAc;AACZnB,YAAAA,cAAc,EAAEoB,GADJ;AAEZtB,YAAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWE,UAFnB;AAGZA,YAAAA,UAAU,EAAE;AAHA,WAAd;AAKA;;AACF,aAAK,GAAL;AACE,cAAIsB,MAAM,GAAG,KAAKxB,KAAL,CAAWG,cAAxB;AAAA,cACED,UAAU,GAAG,KAAKF,KAAL,CAAWE,UAD1B;AAAA,cAEED,kBAAkB,GAAG,KAAKD,KAAL,CAAWC,kBAFlC;;AAIA,cAAI,CAACuB,MAAL,EAAa;AACX;AACD;;AAED,eAAKF,QAAL,CAAc;AACZrB,YAAAA,kBAAkB,EAAE,CADR;AAEZC,YAAAA,UAAU,EAAEuB,IAAI,CAACxB,kBAAkB,GAAGuB,MAArB,GAA8BtB,UAA/B,CAFJ;AAGZC,YAAAA,cAAc,EAAE;AAHJ,WAAd;AAKA;AAzBJ;AA2BD;;;;EApHyBT,S;;AAuH5B,eAAeI,eAAf","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport InputButton from './src/InputButton';\nimport Style from './src/Style';\nimport {\n  View,\n  Text,\n  AppRegistry\n} from 'react-native';\n\nconst inputButtons = [\n  [1, 2, 3, '/'],\n  [4, 5, 6, '*'],\n  [7, 8, 9, '-'],\n  [0, '.', '=', '+']\n];\n\nclass ReactCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      previousInputValue: 0,\n      inputValue: 0,\n      selectedSymbol: null\n    }\n  }\n\n  render() {\n    return ( <\n      View style = {\n        Style.rootContainer\n      } >\n      <\n      View style = {\n        Style.displayContainer\n      } >\n      <\n      Text style = {\n        Style.displayText\n      } > {\n        this.state.inputValue\n      } < /Text> <\n      /View> <\n      View style = {\n        Style.inputContainer\n      } > {\n        this._renderInputButtons()\n      } <\n      /View> <\n      /View>\n    )\n  }\n  _renderInputButtons() {\n    let views = [];\n\n    for (var r = 0; r < inputButtons.length; r++) {\n      let row = inputButtons[r];\n\n      let inputRow = [];\n      for (var i = 0; i < row.length; i++) {\n        let input = row[i];\n\n        inputRow.push( <\n          InputButton value = {\n            input\n          }\n          onPress = {\n            this._onInputButtonPressed.bind(this, input)\n          }\n          key = {\n            r + \"-\" + i\n          }\n          />\n        );\n      }\n\n      views.push( < View style = {\n          Style.inputRow\n        }\n        key = {\n          \"row-\" + r\n        } > {\n          inputRow\n        } < /View>)\n      }\n\n      return views;\n    }\n    _onInputButtonPressed(input) {\n      switch (typeof input) {\n        case 'number':\n          return this._handleNumberInput(input)\n        case 'string':\n          return this._handleStringInput(input)\n      }\n    }\n    _handleNumberInput(num) {\n      let inputValue = (this.state.inputValue * 10) + num;\n\n      this.setState({\n        inputValue: inputValue\n      })\n    }\n\n    _handleStringInput(str) {\n      switch (str) {\n        case '/':\n        case '*':\n        case '+':\n        case '-':\n          this.setState({\n            selectedSymbol: str,\n            previousInputValue: this.state.inputValue,\n            inputValue: 0\n          });\n          break;\n        case '=':\n          let symbol = this.state.selectedSymbol,\n            inputValue = this.state.inputValue,\n            previousInputValue = this.state.previousInputValue;\n\n          if (!symbol) {\n            return;\n          }\n\n          this.setState({\n            previousInputValue: 0,\n            inputValue: eval(previousInputValue + symbol + inputValue),\n            selectedSymbol: null\n          });\n          break;\n      }\n    }\n  }\n\n  export default ReactCalculator"]},"metadata":{},"sourceType":"module"}